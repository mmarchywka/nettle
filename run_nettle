
#!/bin/bash

SELF="$0"
SRC=nettle.h
DEST=nettle.out
MAINDEF="TEST_nettle__"

. cpp_proj_defines

LINK="$MMCD_LINK -lssl -lcrypto -lpthread "
COMPILER="$MMCD_COMPILER"
INCDIR="$MMCD_INCDIR -I ../datascope/ "  # " -I.. " 

# just move it local for now 
#SRC=$MMCD_SRCDIR/$SRC
SRC=./$SRC

WARNS=$MMCD_WARNS

DEBUG="$MMCD_DEBUG" # " -gdwarf-3 -O0 "
OPT="$MMCD_OPT" # " -O3 "
PROFILE="$MMCD_PROFILE" # " -O3 -gdwarf-3 -pg "
FLAGS="-MMD -MF nettle.deps     $DEBUG"

RUN_DATA="nettle.txt"
compile()
{
mmcd_h_compile
}
run()
{
"./$DEST" -source "$RUN_DATA" -quit  
}

list_files()
{
cpp -M  -std=gnu++11 -DTEST_nettle__   -x c++  | sed -e 's/ /\n/g' | grep -v "^/usr" | grep "[A-Za-z0-9]"

}  # list_files 

push_to_git()
{
l1=`find -name "*.zip" `
newbackup -deps
l2=`find -name "*.zip" `
fn=`echo $l1 $l2 | sed -e 's/ /\n/g' | sort | uniq -c | awk '{ if ($1 =="1") print $2 }'`
n=`echo $fn |wc  -w `
if [ "$n" == "1" ]
then
mygit -push-zip "$fn" nettle 
else
echo not sure what to push n=$n and $fn
fi

} # push_to_git



help()
{
echo Usage $0 
cat "$0" | grep "=="  | grep -v grep | sed -e 's/.*==//' | sed -e 's/"[^"]*$//' 
}
while [ "$*" != "" ]
do
start="$*"
if [ "$1" == "-help" ]
then
help
shift
fi

if [ "$1" == "-compile" ]
then
compile
shift
fi

if [ "$1" == "-install" ]
then
x=$devinstalldir
if [ "$x" != "" ]
then
echo cp "$DEST" "$x/$DEST"
cp "$x/$DEST" "$x/$DEST."`date +%Y-%m-%d-%s`
cp "$DEST" "$x/$DEST"
else
echo no install dir $devinstalldir
fi

shift
fi



if [ "$1" == "-opt" ]
then
FLAGS=$OPT
shift
fi

if [ "$1" == "-run" ]
then
shift
#run  $*
run 
#shift
fi

if [ "nettle" == "-list" ]
then
shift
list_files
fi


if [ "$1" == "-push_to_git" ]
then
#shift
push_to_git
shift
fi

if [ "$*" == "$start" ]
then
help
exit -1
fi
done

